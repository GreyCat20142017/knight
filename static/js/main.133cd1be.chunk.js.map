{"version":3,"sources":["actions/index.js","constants.js","functions.js","reducers/index.js","sprite.jsx","components/Cell.jsx","components/Board.jsx","containers/BoardContainer.js","components/Info.jsx","containers/InfoContainer.js","components/Modal.jsx","containers/ModalContainer.js","components/Records.jsx","containers/RecordsContainer.js","components/Header.jsx","containers/HeaderContainer.js","App.js","serviceWorker.js","index.js"],"names":["onCellClick","id","type","onStart","onModalShow","CONTENT","EMPTY","clickable","svg","title","DISABLED","HORSE","LITTER","STAR","POSSIBILITY","x","y","MAP_ID_COORDS","sideLength","arr","i","j","getMapIdCoords","KEY_CODES","ESC","TAB","MODAL_TYPES","shuffleArray","entities","sortableEntities","slice","length","Math","floor","random","temporaryValue","getRandomFromRange","min","max","getInitialResults","resultsFromLS","getObjectFromLocalStorage","records","randomNames","push","name","result","LIFE_COUNTER_BORDER","sort","a","b","getRecordsTable","user","getInitialState","content","previousResults","indexArr","board","cells","horse","info","score","life","gameOver","modal","isModalOpen","modalType","results","undoState","getMoveValidity","idCurrent","idNext","isValid","currentCoord","nextCoord","forEach","item","getCoordXYByID","getSquaresWithHorse","minLimit","squares","sub","size","Array","getSubmatrix","submatrix","k","l","coords","width","height","getAnalizeResult","stateArr","newState","Object","toConsumableArray","needIncreaseScore","horseCoords","tmpArr","map","maxRectangle","resetItems","rectangle","additionToScore","isLocalStorageAvailable","window","e","lsName","objFromLC","JSON","parse","localStorage","getItem","onEmptyStarCellMap","actionId","ind","onLitterCellMap","onLifeLossCellMap","commonMoveReducer","value","state","arguments","undefined","action","specific","_state$board","_state$info","_state$results","tmpHorse","emptyCells","filter","tmpArray","cellsMap","isGameOver","loss","some","coord","itemCoord","getMovePossibility","newResults","concat","splice","recordsUpdater","setItem","stringify","reducer","_state$board2","clickedContent","assign","sprite","wh","react_default","createElement","xmlns","viewBox","d","fill","Cell","handleClick","evt","cell","target","hasAttribute","getAttribute","_this","props","_this$props","this","disabled","className","tabIndex","onClick","Component","Board","_props$board","components_Cell","key","doNothing","BoardContainer","connect","dispatch","Info","_props$info","react","InfoContainer","Modal","onKeyDown","keyCode","refs","first","shiftKey","preventDefault","last","focus","onModalCancel","onSigleButtonTabKeyDown","onLeaveButtons","currentTarget","root","document","body","appendChild","prevProps","prevState","removeChild","_this$props$modal","ReactDOM","createPortal","onDisabledClick","ref","React","ModalContainer","Records","table","RecordsContainer","Header","onUndo","onAboutShow","HeaderContainer","App","containers_HeaderContainer","containers_BoardContainer","containers_InfoContainer","containers_RecordsContainer","containers_ModalContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","render","es","src_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.133cd1be.chunk.js","sourcesContent":["export const CLICK_CELL = 'CLICK_CELL';\r\nexport const START = 'START';\r\n\r\nexport const CLICK_DISABLED_CELL = 'CLICK_DISABLED_CELL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\n\r\nexport const UNDO = 'UNDO';\r\nexport const SHOW_ABOUT = 'SHOW_ABOUT';\r\n\r\nexport const onCellClick = (id) => {\r\n    return {\r\n        type: CLICK_CELL,\r\n        id: id\r\n    };\r\n}\r\n\r\nexport const onStart = () => {\r\n    return {\r\n        type: START\r\n    };\r\n}\r\n\r\nexport const onUndo = () => {\r\n    return {\r\n        type: UNDO\r\n    };\r\n}\r\n\r\nexport const onDisabledClick = (id) => {\r\n    return {\r\n        type: CLICK_DISABLED_CELL,\r\n        id: id\r\n    };\r\n}\r\n\r\nexport const onModalCancel = () => {\r\n    return {\r\n        type: CLOSE_MODAL\r\n    };\r\n}\r\n\r\nexport const onModalShow = (id) => {\r\n    return {\r\n        type: SHOW_MODAL,\r\n        id: id\r\n    };\r\n}\r\n\r\nexport const onAboutShow = () => {\r\n    return {\r\n        type: SHOW_ABOUT\r\n    };\r\n}\r\n","const getMapIdCoords = (sideLength) => {\r\n\tlet arr = [];\r\n\tfor (let i = 0; i < sideLength; i++) {\r\n\t\tfor (let j = 0; j < sideLength; j++) {\r\n\t\t arr[j * sideLength + i] = {x: i + 1, y: j + 1};\r\n\t\t}\r\n\t};\r\n\treturn arr;\r\n};\r\n\r\nexport const BOARD_SIDE = 8;\r\nexport const MIN_RECTANGLE_LIMIT = 3;\r\nexport const LIFE_COUNTER_BORDER = 25;\r\nexport const RECORDS_TABLE_LIMIT = 3;\r\nexport const INITITAL_USERNAME = 'Вы';\r\n\r\nexport const CONTENT = {\r\n  EMPTY: {clickable: true, svg: 'none', title: 'свободно'},\r\n  DISABLED: {clickable: false, svg: 'none', title: 'занято'},\r\n  HORSE: {clickable: false, svg: 'horse', title: 'конь'},\r\n  LITTER: {clickable: true, svg: 'litter', title: 'клетка будет заблокирована в начале следующего хода'},\r\n  STAR: {clickable: true, svg: 'star', title: '+ 1 очко'}\r\n};\r\n\r\nexport const POSSIBILITY = [{x: -1, y: -2}, {x: -2, y: -1}, {x: -2, y: 1}, {x: 1, y: -2}, {x: -1, y: 2}, {x: 2, y: -1}, {x: 1, y: 2}, {x: 2, y: 1}];\r\n\r\nexport const MAP_ID_COORDS = getMapIdCoords(BOARD_SIDE);\r\n\r\nexport const KEY_CODES = {ESC: 27, TAB: 9};\r\n\r\nexport const MODAL_TYPES = {about: 'about', life: 'life', nothing: 'nothing'}\r\n\r\nexport const LSNAME = 'bred-ls';\r\n","import {\r\n  MAP_ID_COORDS,\r\n  POSSIBILITY,\r\n  BOARD_SIDE,\r\n  MIN_RECTANGLE_LIMIT,\r\n  CONTENT,\r\n  RECORDS_TABLE_LIMIT,\r\n  LIFE_COUNTER_BORDER,\r\n  MODAL_TYPES,\r\n  INITITAL_USERNAME,\r\n  LSNAME } from './constants'\r\n\r\nexport const shuffleArray = function (entities) {\r\n  const sortableEntities = entities.slice();\r\n  for (let i = sortableEntities.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let temporaryValue = sortableEntities[i];\r\n    sortableEntities[i] = sortableEntities[j];\r\n    sortableEntities[j] = temporaryValue;\r\n  }\r\n  return sortableEntities;\r\n};\r\n\r\nconst getRandomFromRange =  (min, max) => {\r\n  return Math.floor(min + Math.random() * (max + 1 - min));\r\n};\r\n\r\nexport const getRandomFromArray =  (arr) => {\r\n  return arr[getRandomFromRange(1, arr.length) - 1];\r\n};\r\n\r\nconst getRecordsTable = () => {\r\n  let records = [];\r\n  let randomNames = shuffleArray(['Пупкин', 'Ляпкин', 'Тяпкин', 'Иванов', 'Петров', 'Сидоров']);\r\n  for (let i = 1; i <= RECORDS_TABLE_LIMIT; i++) {\r\n    records.push({\r\n      name: randomNames[i],\r\n      result: getRandomFromRange (1,  Math.floor(LIFE_COUNTER_BORDER / 2))});\r\n  }\r\n  return records.sort((a, b) => b.result - a.result);\r\n}\r\n\r\nconst getInitialResults = () => {\r\n  let resultsFromLS = getObjectFromLocalStorage(LSNAME);\r\n  return resultsFromLS ? resultsFromLS : {records: getRecordsTable(), user: INITITAL_USERNAME};\r\n}\r\n\r\nexport const getInitialState = (sideLength, content, previousResults) => {\r\n  let arr = [];\r\n  let indexArr = [];\r\n  for (let i = 0; i < sideLength * sideLength; i++) {\r\n      arr.push({id: i, content: content.EMPTY});\r\n      indexArr.push(i);\r\n  };\r\n\r\n  indexArr = shuffleArray(indexArr);\r\n\r\n  if (indexArr.length >= 3) {\r\n    arr[indexArr[0]].content = content.HORSE;\r\n    arr[indexArr[1]].content = content.STAR;\r\n    arr[indexArr[2]].content = content.LITTER;\r\n  }\r\n\r\n  return {\r\n    board: {cells: arr, horse: indexArr[0]},\r\n    info: {score: 0, life: 1, gameOver: false},\r\n    modal: {isModalOpen: false, modalType: MODAL_TYPES.nothing},\r\n    results:  (previousResults ?  {records: previousResults.records, user: previousResults.user} : getInitialResults()),\r\n    undoState: null\r\n  };\r\n};\r\n\r\nexport const getMoveValidity = (idCurrent, idNext) => {\r\n  let isValid = false;\r\n  let currentCoord = MAP_ID_COORDS[idCurrent];\r\n  let nextCoord = MAP_ID_COORDS[idNext];\r\n  POSSIBILITY.forEach(item => {\r\n    if ((currentCoord.x + item.x === nextCoord.x) && (currentCoord.y + item.y === nextCoord.y)) {\r\n      isValid = true;\r\n    }\r\n  });\r\n  return isValid;\r\n};\r\n\r\nconst getIndexByCoord = (coord, sideLength) => ((coord.x - 1) * (sideLength) + (coord.y - 1));\r\n\r\nexport const getMovePossibility = (idCurrent, cells) => {\r\n  let currentCoord = getCoordXYByID(idCurrent, BOARD_SIDE);\r\n  let isMovePossible =  POSSIBILITY.some(item => {\r\n    let itemCoord = {x: currentCoord.x + item.x, y: currentCoord.y + item.y};\r\n    return (\r\n      (itemCoord.x >= 1) &&  (itemCoord.x <= BOARD_SIDE) &&\r\n      (itemCoord.y >= 1) && (itemCoord.y <= BOARD_SIDE)  &&\r\n      (cells[getIndexByCoord(itemCoord, BOARD_SIDE)].content !== CONTENT.DISABLED)\r\n      )\r\n  });\r\n  return isMovePossible;\r\n};\r\n\r\nexport const getCoordByID = (id, sideLength) => {\r\n  return {i: Math.floor(id / sideLength), j: id % sideLength};\r\n};\r\n\r\nexport const getCoordXYByID = (id, sideLength) => {\r\n  return {x: Math.floor(id / sideLength) + 1, y: id % sideLength + 1};\r\n};\r\n\r\nconst getSubmatrix = (size) => {\r\n  let sub = new Array(size);\r\n  for (let i = 0; i < size; i++) {\r\n    sub[i] = new Array(size);\r\n    for (let j = 0; j < size; j++) {\r\n      sub[i][j] = 1;\r\n    }\r\n  };\r\n  return sub;\r\n}\r\n\r\nconst getSquaresWithHorse  = (arr, minLimit, horse) => {\r\n  let squares = [];\r\n  let sub = getSubmatrix(minLimit);\r\n\r\n  for (let i = 0; i < arr.length - sub.length + 1; i++) {\r\n    for (let j = 0; j < arr[0].length - sub[0].length + 1; j++) {\r\n      let submatrix = true;\r\n      for (let k = 0; k < sub.length; ++k) {\r\n        for (let l = 0; l < sub[0].length; ++l) {\r\n          if (arr[i + k][j + l] === sub[k][l]) {\r\n          } else {\r\n            submatrix = false;\r\n          }\r\n        }\r\n      }\r\n      if (submatrix && ((horse.i >= i && horse.i < i + minLimit) && (horse.j >= j && horse.j < j + minLimit))) {\r\n        squares.push( {coords: {i:i, j: j}, size: {width: minLimit, height: minLimit}});\r\n      }\r\n    }\r\n  }\r\n  return squares;\r\n};\r\n\r\nexport const getAnalizeResult = (stateArr, horse) => {\r\n  let newState = [...stateArr];\r\n  let needIncreaseScore = false;\r\n  let horseCoords = getCoordByID(horse, BOARD_SIDE);\r\n  let tmpArr = stateArr.map(item => (item.content === CONTENT.DISABLED || item.content === CONTENT.HORSE) ? 1 : 0);\r\n  let arr = new Array(BOARD_SIDE);\r\n  for (let i = 0; i < BOARD_SIDE; i++) {\r\n    arr[i] = new Array(BOARD_SIDE);\r\n    for (let j = 0; j < BOARD_SIDE; j++) {\r\n      arr[i][j] = tmpArr[i * BOARD_SIDE + j];\r\n    }\r\n  };\r\n let maxRectangle = getSquaresWithHorse(arr, MIN_RECTANGLE_LIMIT, horseCoords);\r\n let resetItems = [];\r\n if (maxRectangle.length > 0) {\r\n      maxRectangle.forEach(rectangle => {\r\n      for (let i = 0; i < rectangle.size.height; i++) {\r\n        for (let j = 0; j < rectangle.size.width; j++) {\r\n        resetItems.push(rectangle.coords.i * BOARD_SIDE + i * BOARD_SIDE + rectangle.coords.j + j);\r\n      }\r\n    };\r\n    for (let k = 0; k < resetItems.length; k++) {\r\n      if (newState[resetItems[k]].content !== CONTENT.HORSE) {\r\n        newState[resetItems[k]].content = CONTENT.EMPTY;\r\n      }\r\n    };\r\n    });\r\n    needIncreaseScore = true;\r\n }\r\n return {cells: newState, additionToScore: (needIncreaseScore ? 1 : 0)};\r\n};\r\n\r\n\r\nexport const isLocalStorageAvailable = () => {\r\n  try {\r\n    return 'localStorage' in window && window['localStorage'] !== null;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\nexport const putObjectToLocalStorage = (lsName, value) => {\r\n  if (isLocalStorageAvailable()) {\r\n    localStorage.setItem(lsName, JSON.stringify(value));\r\n  }\r\n};\r\n\r\n\r\nexport const getObjectFromLocalStorage = (lsName) => {\r\n  if (isLocalStorageAvailable()) {\r\n    const objFromLC = JSON.parse(localStorage.getItem(lsName));\r\n    return ((typeof objFromLC) === 'object') ? objFromLC : null;\r\n  }\r\n  return null;\r\n};\r\n","import { CLICK_CELL, START, CLICK_DISABLED_CELL, CLOSE_MODAL, SHOW_MODAL, SHOW_ABOUT, UNDO } from '../actions';\r\n\r\nimport {\r\n        shuffleArray,\r\n        getMoveValidity,\r\n        getInitialState,\r\n        getAnalizeResult,\r\n        getMovePossibility,\r\n        putObjectToLocalStorage\r\n} from '../functions';\r\n\r\nimport { BOARD_SIDE, CONTENT, LIFE_COUNTER_BORDER, MODAL_TYPES, LSNAME } from '../constants';\r\n\r\nconst recordsUpdater = (user, score, records) => {\r\n  return (score >= records[records.length - 1].result)  ?\r\n   [...records, {name: user, result: score}].sort((a, b) => b.result - a.result).splice(0, records.length) :\r\n   records\r\n};\r\n\r\nconst onEmptyStarCellMap = (cells, actionId) => {\r\n return cells.map((item, ind) => {\r\n  if (ind === actionId) {\r\n    item.content = CONTENT.HORSE;\r\n  }\r\n  if ((item.content === CONTENT.HORSE) && (ind !== actionId)) {\r\n    item.content = CONTENT.DISABLED;\r\n  }\r\n\r\n  if (item.content === CONTENT.LITTER)  {\r\n    item.content = CONTENT.DISABLED;\r\n  }\r\n  return item;\r\n});\r\n};\r\n\r\nconst onLitterCellMap = (cells, actionId) => {\r\n return cells.map((item, ind) => {\r\n  if (ind === actionId) {\r\n    item.content = CONTENT.HORSE;\r\n  }\r\n  if (item.content === CONTENT.HORSE && ind !== actionId) {\r\n    item.content = CONTENT.DISABLED;\r\n  }\r\n  return item;\r\n});\r\n};\r\n\r\nconst onLifeLossCellMap = (cells, actionId) => {\r\n  return cells.map((item, ind) => {\r\n  if ((item.content === CONTENT.HORSE) && (ind !== actionId)) {\r\n    item.content = CONTENT.DISABLED;\r\n  }\r\n  if ((item.content === CONTENT.LITTER)) {\r\n    item.content = CONTENT.DISABLED;\r\n  }\r\n  if (ind === actionId) {\r\n    item.content = CONTENT.HORSE;\r\n  }\r\n  return item;\r\n});\r\n};\r\n\r\nconst commonMoveReducer = (state = {}, action, specific) => {\r\n  let {cells, horse} = state.board;\r\n  let {score, life} = state.info;\r\n  let {records, user} = state.results;\r\n  let actionId = (specific.content === CONTENT.DISABLED) ? (state.modal.tmpHorse || horse) : action.id;\r\n\r\n  score = (specific.content === CONTENT.STAR) ? score + 1 : score;\r\n\r\n  switch (action.type) {\r\n    case CLICK_CELL:\r\n    case CLICK_DISABLED_CELL:\r\n      const emptyCells = shuffleArray(cells.filter(item => ( item.content === CONTENT.EMPTY) && (item.id !== actionId)));\r\n      let tmpArray  = specific.cellsMap(cells, actionId);\r\n      if (emptyCells.length > 0) {\r\n          tmpArray[emptyCells[0].id].content = CONTENT.LITTER;\r\n      }\r\n      if (emptyCells.length > 1 && specific.content === CONTENT.STAR) {\r\n          tmpArray[emptyCells[1].id].content = CONTENT.STAR;\r\n      }\r\n      let result = getAnalizeResult(tmpArray, actionId);\r\n      score = score + result.additionToScore;\r\n      life = ((result.additionToScore) && (score % LIFE_COUNTER_BORDER === 0) ? (life + 1) : life) - specific.loss;\r\n      let isGameOver = !((life > 0) || getMovePossibility(actionId, result.cells));\r\n      let newResults = {records: (isGameOver ? recordsUpdater(user, score, records) : records),  user: user};\r\n      if (isGameOver) {\r\n        putObjectToLocalStorage(LSNAME, newResults);\r\n      }\r\n      return {\r\n        board: {horse: actionId, cells: result.cells},\r\n        info: {score: score, life: life, gameOver: isGameOver},\r\n        modal: {isModalOpen: false, modalType: MODAL_TYPES.nothing},\r\n        results: newResults,\r\n        undoState: null\r\n      };\r\n    default:  return state;\r\n  }\r\n};\r\n\r\nconst reducer = (state = {}, action) => {\r\n\tlet {horse, cells} = state.board;\r\n  let results = state.results;\r\n\r\n\tswitch (action.type) {\r\n\t\tcase CLICK_CELL:\r\n\r\n\t\t\tif (getMoveValidity(horse, action.id)) {\r\n        let clickedContent = cells[action.id].content;\r\n\r\n\t\t\t\tswitch (clickedContent) {\r\n\t\t\t\t\tcase CONTENT.STAR: {\r\n\t\t\t\t\t\treturn Object.assign({}, state,\r\n              commonMoveReducer(state, action, {cellsMap: onEmptyStarCellMap, content: clickedContent, loss: 0}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase CONTENT.LITTER: {\r\n\t\t\t\t\t\treturn Object.assign({}, state,\r\n              commonMoveReducer(state, action, {cellsMap: onLitterCellMap, content: clickedContent, loss: 0}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase CONTENT.DISABLED: {\r\n\t\t\t\t\t\treturn state;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase CONTENT.EMPTY: {\r\n\t\t\t\t\t\treturn Object.assign({}, state,\r\n              commonMoveReducer(state, action, {cellsMap: onEmptyStarCellMap, content: clickedContent, loss: 0}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault: {\r\n            return state;\r\n          }\r\n\t\t\t\t}\r\n\t\t  }\r\n     return state;\r\n\r\n\r\n\t\tcase START: return getInitialState(BOARD_SIDE, CONTENT, results);\r\n\r\n    case CLOSE_MODAL: return Object.assign({}, state, { modal: {isModalOpen: false, modalType: MODAL_TYPES.nothing}});\r\n\r\n    case SHOW_MODAL: return (state.info.life > 0 ) ?\r\n      Object.assign({}, state, { modal: {isModalOpen: true, modalType: MODAL_TYPES.life, tmpHorse: action.id}}) :\r\n      state;\r\n\r\n    case CLICK_DISABLED_CELL: return (state.info.life > 0 &&  getMoveValidity(horse, state.modal.tmpHorse || horse)) ?\r\n      Object.assign({}, state, commonMoveReducer(state, action, {cellsMap: onLifeLossCellMap, content: CONTENT.DISABLED, loss: 1})) :\r\n      state;\r\n\r\n    case UNDO: return state;\r\n\r\n\r\n    case SHOW_ABOUT: return Object.assign({}, state, { modal: {isModalOpen: true, modalType: MODAL_TYPES.about}});\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\n\r\nexport const sprite = (name, wh = 20) => {\r\nswitch (name) {\r\ncase 'horse': return (\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 205.482 205.482\" width={wh} height={wh}>\r\n\t<path d=\"M188.03,113.487c-21.775,11.727-23.851-9.635-23.851-9.635c-18.021-2.093-31.403-22.201-31.403-22.201   c-24.312,12.558-10.752,47.996-0.284,61.603c1.396,1.809,2.494,3.747,3.417,5.745h17.354v25.215h24.045v31.269H11.865v-31.269   h24.048v-25.215h17.067c-20.803-26.351-15.392-51.211-9.422-67.664C50.767,61.52,60.511,50.644,74.718,39.07   c21.122-17.221,60.145-19.375,60.145-19.375c0.255-1.463,1.448-3.177,2.974-4.926c-4.688,0.127-10.427,0.52-16.964,1.362   c-4.469,0.872-9.387,1.356-14.378,2.816c-5.104,1.105-10.285,2.878-15.581,4.912c-5.29,1.974-10.489,4.775-15.628,7.692   c-4.876,3.402-10.06,6.537-14.156,11.018c-4.702,3.83-8.127,8.819-11.645,13.586c-3.673,4.682-5.479,10.4-8.228,15.321   c-2.039,5.249-3.177,10.666-4.714,15.617c-1.392,4.994-1.368,9.992-2.069,14.49c-0.594,4.492-1.049,8.629-0.704,12.317   c0.116,3.688,0.195,6.928,0.278,9.563c0.156,5.297,0.254,8.335,0.254,8.335l-0.733,0.07c0,0-0.629-2.967-1.457-8.311   c-0.393-2.671-0.877-5.923-1.41-9.682c-0.807-3.735-0.831-8.015-0.479-12.726c0.266-3.369,0.313-7.037,0.629-10.796l-8.801-0.189   l9.014-11.032l-9.46-1.369L35.122,67.41l-9.916-3.154l13.976-7.669L28.59,53.434l18.256-5.872l-12.62-3.606L54.73,38.32   l-11.275-5.181l20.729-2.707L54.048,24.58l25.307-2.651c0.112-0.059,0.239-0.127,0.354-0.163l-11.691-5.296l26.596-2.258L82.44,7.9   l50.312,4.007c2.72,0.106,5.096,0.319,7.259,0.556C146.478,6.271,156.632,0,156.632,0c-2.08,2.084-2.932,13.409-2.932,13.409   c2.099-3.771,8.795-7.542,8.795-7.542c-3.759,8.781,0,27.624,0,27.624c10.899,10.899,23.046,48.578,23.046,48.578l4.623,6.694   C196.01,97.173,193.852,110.354,188.03,113.487z\" fill=\"#FFDA44\"/></svg>)\r\ncase 'litter': return (<svg xmlns=\"http://www.w3.org/2000/svg\" width={wh} height={wh}  viewBox=\"0 0 8 8\" fill=\"rgba(0, 0, 0, 0.3)\">\r\n \t<path d=\"M7.44.03c-.03 0-.04.02-.06.03l-3.75 2.66c-.04.03-.1.11-.13.16l-.13.25c.72.23 1.27.78 1.5 1.5l.25-.13c.05-.03.12-.08.16-.13l2.66-3.75c.03-.05.04-.09 0-.13l-.44-.44c-.02-.02-.04-.03-.06-.03zm-4.78 3.97c-.74 0-1.31.61-1.31 1.34 0 .99-.55 1.85-1.34 2.31.39.22.86.34 1.34.34 1.47 0 2.66-1.18 2.66-2.66 0-.74-.61-1.34-1.34-1.34z\"/></svg>)\r\ncase 'star': return (\r\n<svg xmlns=\"http://www.w3.org/2000/svg\"  fill=\"rgba(255, 218, 68, 0.3)\" viewBox=\"0 0 8 8\"  width={wh} height={wh}><path d=\"M4 0l-1 3h-3l2.5 2-1 3 2.5-2 2.5 2-1-3 2.5-2h-3l-1-3z\" /></svg>)\r\ncase 'undo': return (\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"rgba(255, 218, 68, 1)\" viewBox=\"0 0 24 24\" width={wh} height={wh}><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"/></svg>)\r\ncase 'help': return (\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"rgba(255, 218, 68, 1)\" viewBox=\"0 0 24 24\" width={wh} height={wh}><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"/></svg>)\r\ncase 'none': return (null)\r\ndefault:\r\n\treturn (null)\r\n}\r\n};\r\n","import React, { Component} from 'react';\r\n\r\nimport { sprite } from '../sprite.jsx'\r\n\r\nclass Cell extends Component {\r\n\thandleClick = (evt) => {\r\n    let cell= evt.target;\r\n    if (cell.hasAttribute('tabIndex') && cell.getAttribute('tabIndex') === '-1') {\r\n      this.props.onModalShow(this.props.id);\r\n    } else {\r\n\t\t  this.props.onCellClick(this.props.id);\r\n    }\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst {title, clickable, svg, disabled} = this.props;\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={'board__cell ' + (disabled ? 'board__cell--disabled' : '')}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\ttabIndex={clickable ? '0' : '-1'}\r\n\t\t\t\tonClick = {this.handleClick}>\r\n\t\t\t\t{ sprite(svg, '100%') }\r\n\t\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default  Cell;\r\n","import React from 'react';\r\nimport { CONTENT } from '../constants'\r\nimport { getMoveValidity } from '../functions';\r\nimport { sprite } from '../sprite'\r\nimport Cell from './Cell';\r\nimport './Board.css';\r\n\r\nconst Board = (props) => {\r\n   const {cells, horse} = props.board;\r\n   const {gameOver} = props.info;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='board'>\r\n\t\t\t\t  {cells.map((item, ind) =>\r\n\t\t\t\t  \t <Cell key={'id-' + ind}\r\n              svg={item.content.svg}\r\n              clickable={item.content.clickable}\r\n              title={item.content.title}\r\n              id = {ind}\r\n              horse = {horse}\r\n\t\t\t\t  \t  disabled={item.content === CONTENT.DISABLED}\r\n              onCellClick={gameOver ? props.doNothing : props.onCellClick}\r\n              onModalShow={gameOver || !getMoveValidity(horse, ind) ? props.doNothing : props.onModalShow} />\r\n\t\t\t\t  )}\r\n          <div className={'board__end ' + (gameOver ? 'board__end--over': '')}>\r\n            <p className='board__wrapper'>\r\n            { sprite('horse', '100%') }\r\n            </p>\r\n         </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Board;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Board from '../components/Board';\r\nimport { onCellClick, onModalShow} from '../actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.board,\r\n    modal: state.modal,\r\n    info: state.info\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n   onCellClick:  id => dispatch(onCellClick(id)),\r\n   onModalShow:  id => dispatch(onModalShow(id)),\r\n   doNothing: () => {}\r\n };\r\n}\r\n\r\n//connect создает функцию создания контейнера. Параметром при вызове этой ф-ции служит презентационный компонент.\r\nconst BoardContainer = connect(mapStateToProps, mapDispatchToProps)(Board);\r\n\r\nexport default BoardContainer;\r\n","import React, {Fragment} from 'react';\r\n\r\nimport './Info.css';\r\n\r\nconst Info = (props) => {\r\n   const {score, life, gameOver} = props.info;\r\n\r\n\t\treturn (\r\n      <Fragment>\r\n       {gameOver ?\r\n        (<div className='info'>\r\n         <div className='info__wrapper info__wrapper--status'>\r\n           <span className='info__span info__span--status'>Игра окончена: ходов нет!</span>\r\n         </div>\r\n        </div>)\r\n       : null\r\n       }\r\n  \t\t\t<div className='info'>\r\n          <div className='info__wrapper'>\r\n    \t\t\t\t <span className='info__span info__span--score'>Счет: {score}</span>\r\n    \t\t\t\t <button className='info__button info__button--start btn btn--small' type='button' title='Перезапустить игру' onClick={props.onStart}>Старт</button>\r\n    \t\t\t\t <span className='info__span info__span--life' title='Жизнь используется для прорыва через заблокированное поле'>Жизни: {life}</span>\r\n           </div>\r\n        </div>\r\n      </Fragment>\r\n\t\t\t)\r\n}\r\n\r\nexport default Info;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Info from '../components/Info';\r\nimport { onStart } from '../actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    info: state.info\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n   onStart:  () => dispatch(onStart())\r\n };\r\n}\r\n\r\nconst InfoContainer = connect(mapStateToProps, mapDispatchToProps)(Info);\r\n\r\nexport default InfoContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {KEY_CODES, MODAL_TYPES} from '../constants'\r\nimport './Modal.css';\r\n\r\nexport default class Modal extends React.Component {\r\n\r\n  componentWillMount() {\r\n    this.root = document.createElement('div');\r\n    document.body.appendChild(this.root);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.modal.isModalOpen ) {\r\n      this.refs.first.focus();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.root);\r\n  }\r\n\r\n  onKeyDown = (evt) => {\r\n    switch (evt.keyCode) {\r\n      case KEY_CODES.TAB: {\r\n        if ((evt.target === this.refs.first) && evt.shiftKey) {\r\n          evt.preventDefault();\r\n          this.refs.last.focus();\r\n        }\r\n        if ((evt.target === this.refs.last) && !evt.shiftKey) {\r\n          evt.preventDefault();\r\n          this.refs.first.focus();\r\n        }\r\n        break;\r\n      }\r\n\r\n      case KEY_CODES.ESC: {\r\n        this.props.onModalCancel();\r\n        break;\r\n      }\r\n\r\n      default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  onSigleButtonTabKeyDown = (evt) => {\r\n    switch (evt.keyCode) {\r\n      case KEY_CODES.TAB: {\r\n        evt.preventDefault();\r\n        break;\r\n      }\r\n\r\n      case KEY_CODES.ESC: {\r\n        this.props.onModalCancel();\r\n        break;\r\n      }\r\n\r\n      default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  onLeaveButtons = (evt) => {\r\n   if (evt.currentTarget.className === 'modal' && evt.target.className === 'modal' ) {\r\n     this.refs.first.focus();\r\n   }\r\n }\r\n\r\n  render() {\r\n\r\n    const {isModalOpen, modalType} = this.props.modal;\r\n    if (isModalOpen && modalType === MODAL_TYPES.life) {\r\n      return (\r\n      ReactDOM.createPortal(\r\n        <div className=\"modal\" onClick={this.onLeaveButtons}>\r\n          <div className='modal__wrapper'>\r\n             <h2 className='modal__title'>Для хода через закрашенную клетку:</h2>\r\n             <button className=\"modal__button btn\" onClick={this.props.onDisabledClick} onKeyDown={this.onKeyDown} ref='first'>Использовать жизнь</button>\r\n             <button className=\"modal__button btn\" onClick={this.props.onModalCancel} onKeyDown={this.onKeyDown}  ref='last'>Отмена</button>\r\n          </div>\r\n        </div>,\r\n        this.root)\r\n      )\r\n    } else if (isModalOpen && modalType === MODAL_TYPES.about) {\r\n      return (ReactDOM.createPortal(\r\n        <div className=\"modal\" onClick={this.onLeaveButtons}>\r\n          <div className='modal__wrapper modal__wrapper--about'>\r\n             <h2 className='modal__title'>Конь-2018. Правила.</h2>\r\n             <p className='modal__text'>Необходимо перемещаться конем, набирая очки. За \"звезду\": +1 очко, за \"взрыв\" квадрата конем: +1 очко.</p>\r\n             <p className='modal__text'>Если число набранных очков кратно 25 - дается дополнительная жизнь.\r\n             Доп. жизнью можно воспользоваться для хода по закрашенной клетке. Кисточка обозначает клетку, которая закрасится в начале следующего хода.</p>\r\n             <p className='modal__text'>Игра заканчивается когда ходов и жизней больше нет.</p>\r\n             <button className=\"modal__button btn\" onClick={this.props.onModalCancel} onKeyDown={this.onSigleButtonTabKeyDown} ref='first'>Закрыть</button>\r\n          </div>\r\n        </div>,\r\n        this.root)\r\n     )\r\n    }\r\n    else {\r\n      return (null)\r\n    }\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport Modal from '../components/Modal';\r\nimport { onDisabledClick, onModalCancel } from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDisabledClick: id => dispatch(onDisabledClick(id)),\r\n    onModalCancel: () => dispatch(onModalCancel())\r\n  };\r\n}\r\n\r\nconst ModalContainer = connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\n\r\nimport './Records.css';\r\n\r\nconst Records = (props) => {\r\n   const table = props.records;\r\n\t\treturn (\r\n\t\t\t<div className='records'>\r\n         <p className='records__row records__row--header'>\r\n\t\t\t\t  <span className='records__cell records__cell--left'>Игрок</span>\r\n\t\t\t\t  <span className='records__cell records__cell--right' >Счет</span>\r\n         </p>\r\n         <ul className='records__rows'>\r\n           {table.map((item, ind) => (\r\n              <li className='records__row' key={ind}>\r\n               <span className='records__cell records__cell--left'>{item.name}</span>\r\n               <span className='records__cell records__cell--right' >{item.result}</span>\r\n              </li>\r\n            )\r\n         )}\r\n        </ul>\r\n\t\t\t</div>\r\n\t\t\t)\r\n}\r\n\r\nexport default Records;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Records from '../components/Records';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    records: state.results.records\r\n  };\r\n}\r\n\r\nconst RecordsContainer = connect(mapStateToProps, null)(Records);\r\n\r\nexport default RecordsContainer;\r\n","import React from 'react';\r\n\r\nimport { sprite } from '../sprite.jsx'\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n\t\treturn (\r\n\t\t\t<header className='header'>\r\n        <div className='header__wrapper'>\r\n          <h2 className='header__title'>Конь-2018</h2>\r\n          <div className='header__buttons'>\r\n            {props.undoState ?\r\n    \t\t\t\t  <button\r\n                className='header__button header__button--undo'\r\n                type='button'\r\n                title='Отмена последнего хода'\r\n                onClick={props.onUndo}>\r\n                <span className='visually-hidden'>Отменить ход</span>\r\n                { sprite('undo', '24px') }\r\n              </button> : null\r\n            }\r\n            <button\r\n              className='header__button header__button--about'\r\n              type='button'\r\n              title='Правила игры'\r\n              onClick={props.onAboutShow}>\r\n              <span className='visually-hidden'>О программе</span>\r\n              { sprite('help', '24px') }\r\n            </button>\r\n          </div>\r\n        </div>\r\n\t\t\t</header>\r\n\t\t\t)\r\n}\r\n\r\nexport default Header;\r\n","import { connect } from 'react-redux';\r\n\r\nimport Header from '../components/Header';\r\nimport { onUndo, onAboutShow } from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    undoState: state.undoState,\r\n    modal: state.modal,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n   onUndo: () => dispatch(onUndo()),\r\n   onAboutShow: () => dispatch(onAboutShow())\r\n }\r\n};\r\n\r\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\r\n\r\nexport default HeaderContainer;\r\n","import React from 'react';\r\n\r\nimport BoardContainer from './containers/BoardContainer';\r\nimport InfoContainer from './containers/InfoContainer';\r\nimport ModalContainer from './containers/ModalContainer';\r\nimport RecordsContainer from './containers/RecordsContainer';\r\nimport HeaderContainer from './containers/HeaderContainer';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='game'>\r\n            <HeaderContainer/>\r\n            <BoardContainer/>\r\n            <InfoContainer/>\r\n            <RecordsContainer/>\r\n            <ModalContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './reducers';\r\n\r\nimport {BOARD_SIDE, CONTENT} from './constants';\r\nimport {getInitialState} from './functions.js';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(reducer, getInitialState(BOARD_SIDE, CONTENT));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\ndocument.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}